trigger:
  branches:
    include:
    - master
pr:
  branches:
    exclude:
    - "*"
name: '$(GitVersion.FullSemVer)-Build-and-Deploy'
variables:
- name: sample
  value: 'sample-py-manifest.yaml'
- name: container_name
  value: 'vegeroblob'
- name: DHrepo
  value: 'vvvegero97/pythonweb'
- name: tag
  value: '$(GitVersion.SemVer)-$(GitVersion.BranchName)'
#############################################################################################
###############################----------BUILD STAGE----------###############################
#############################################################################################
stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
###############################----------GIT VERSION----------###############################
    - task: gitversion/setup@0
      inputs:
        versionSpec: '5.x'
    - task: gitversion/execute@0
      displayName: Determine Version
##########################----Version Artifact for Deploy Stage----###########################
    - task: Bash@3
      displayName: Add version artifact for Deploy Stage
      inputs:
        targetType: 'inline'
        script: |
          mkdir -p $(Pipeline.Workspace)/variables
          echo $(tag)'.yaml' > $(Pipeline.Workspace)/variables/manifestname
    - task: PublishBuildArtifacts@1
      displayName: Publish manifest name for Deploy Stage
      inputs:
        PathtoPublish: '$(Pipeline.Workspace)/variables'
        ArtifactName: 'manifestname'
        publishLocation: 'Container'
# ###############################--------DOCKER BUILD-PUSH--------###############################
#     - task: Docker@2
#       displayName: Build an image
#       inputs:
#         command: build
#         dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
#         tags: |
#           $(tag)
#     - task: Docker@2
#       displayName: Push to DockerHub
#       inputs:
#         containerRegistry: 'dockerhub'
#         repository: $(DHrepo)
#         command: 'buildAndPush'
#         Dockerfile: '**/Dockerfile'
#         tags: '$(tag)'
###############################-----------KEY VAULT-----------###############################
    - task: AzureKeyVault@2
      displayName: Get secrets
      inputs:
        azureSubscription: 'AZURE SPN'
        KeyVaultName: 'vegeroKeyVault'
        SecretsFilter: 'storage-account-name, storage-account-key, storage-account-connection-string'
        RunAsPreJob: false
###############################----------SAMPLE YAML----------###############################
    - task: AzureCLI@2
      displayName: Copy sample manifest from blob storage
      inputs:
        azureSubscription: 'AZURE SPN'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          mkdir $(Build.SourcesDirectory)/blob-mnfst
               az storage blob download --account-name $(storage-account-name) --account-key $(storage-account-key) --container-name $(container_name) --file $(Build.SourcesDirectory)/blob-mnfst/$(sample) --name $(sample)
###############################----------CHANGE YAML----------###############################
    - task: Bash@3
      displayName: change image in manifest file and rename file
      inputs:
        targetType: 'inline'
        script: |
          sed -i 's!vegerosample!$(DHrepo):$(tag)!'  ./$(sample)
          echo 'File name: $(tag).yaml'
          mv ./$(sample) $(tag).yaml
          echo 'contents of new manifest:'
          cat $(tag).yaml
        workingDirectory: '$(Build.SourcesDirectory)/blob-mnfst'
    # - task: AzureCLI@2
    #   displayName: Upload new manifest to blob storage
    #   inputs:
    #     azureSubscription: 'AZURE SPN'
    #     scriptType: 'bash'
    #     scriptLocation: 'inlineScript'
    #     inlineScript: 'az storage blob upload --account-name $(storage-account-name) --account-key $(storage-account-key) -f $(Build.SourcesDirectory)/blob-mnfst/$(tag).yaml -c $(container_name) -n $(tag).yaml'
#############################################################################################
###############################----------DEPLOY STAGE----------##############################
#############################################################################################
- stage: Deploy
  dependsOn:
  - Build
  displayName: Deploy Image from Build to dev AKS
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: ubuntu-latest
    steps:
###############################-----------KEY VAULT-----------###############################
    - task: AzureKeyVault@2
      displayName: Get secrets
      inputs:
        azureSubscription: 'AZURE SPN'
        KeyVaultName: 'vegeroKeyVault'
        SecretsFilter: 'storage-account-name, storage-account-key, storage-account-connection-string'
        RunAsPreJob: false
##############################-----------GET BUILD VAR-----------##############################
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'manifestname'
        downloadPath: '$(Pipeline.Workspace)/variables'
    - task: Bash@3
      displayName: Get the filename variable for manifest
      inputs:
        targetType: 'inline'
        script: |
          build_manifest=$(cat $(Pipeline.Workspace)/variables/manifestname/manifestname)
          echo "##vso[task.setvariable variable=build_manifest]$build_manifest"
          echo $(build_manifest)
###############################-----------GET NEW YAML-----------###############################
    # - task: AzureCLI@2
    #   displayName: Download manifest from blob storage
    #   inputs:
    #     azureSubscription: 'AZURE SPN'
    #     scriptType: 'bash'
    #     scriptLocation: 'inlineScript'
    #     inlineScript: |
    #       mkdir $(Pipeline.Workspace)/manifest
    #            az storage blob download --account-name $(storage-account-name) --account-key $(storage-account-key) --container-name $(container_name) --file $(Pipeline.Workspace)/manifest/$(build_manifest) --name $(build_manifest)
    # - task: Bash@3
    #   displayName: Display Results
    #   inputs:
    #     targetType: 'inline'
    #     script: |
    #       echo 'downloaded file contents:'
    #       cat $(build_manifest)
    #     workingDirectory: '$(Pipeline.Workspace)/manifest'
# ###############################-----------DEPLOY NEW YAML-----------###############################
#     - task: Kubernetes@1
#       displayName: Deploy to K8S Cluster using downloaded manifest
#       inputs:
#         connectionType: 'Kubernetes Service Connection'
#         kubernetesServiceEndpoint: 'mySTAGcluster' 
#         namespace: 'default'
#         command: 'apply'
#         useConfigurationFile: true
#         configuration: '$(Pipeline.Workspace)/manifest/$(build_manifest)'
#         secretType: 'dockerRegistry'
#         containerRegistryType: 'Azure Container Registry'

